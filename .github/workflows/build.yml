name: build

on:
  push:
    branches:
      - "**"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Test
        run: make test

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          push: ${{ github.ref == 'refs/heads/main' }}
          tags: |
            ghcr.io/${{ github.repository }}/server:latest

  generate-check:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-go@v5
        with:
          go-version-file: "go.mod"

      - name: Setup
        run: make setup

      - name: Code generate check
        run: |
          make generate-code
          git diff --exit-code

  db-check:
    runs-on: ubuntu-latest
    env:
      MYSQL_DATABASE: code-gateway
      MYSQL_USER: service
      MYSQL_PASSWORD: password
      MYSQL_HOST: localhost
      MYSQL_PORT: 3306
    services:
      db:
        image: mariadb:11.4
        env:
          MYSQL_RANDOM_ROOT_PASSWORD: "yes"
          MYSQL_DATABASE: code-gateway
          MYSQL_USER: service
          MYSQL_PASSWORD: password
        options: >-
          --health-cmd "healthcheck.sh --connect --innodb_initialized"
          --health-interval 10s
          --health-timeout 10s
          --health-retries 5
        ports:
          - 3306:3306
    steps:
      - uses: actions/checkout@v4

      - name: install tbls command
        env:
          VERSION: 1.81.0
        run: |
          curl -o tbls.deb -L https://github.com/k1LoW/tbls/releases/download/v${VERSION}/tbls_${VERSION}-1_amd64.deb
          sudo dpkg -i tbls.deb
          rm tbls.deb

      - name: install migrate command
        env:
          VERSION: 4.18.2
        run: |
          curl -o migrate.deb -L https://github.com/golang-migrate/migrate/releases/download/v${VERSION}/migrate.linux-amd64.deb
          sudo dpkg -i migrate.deb
          rm migrate.deb

      - name: test migrate up
        run: make migrate-up-all

      - name: lint for database
        run: make db-lint

      - name: make db document
        run: make db-doc

      - name: test migrate down all
        run: make migrate options="down -all"

      - name: archive db docs
        uses: actions/upload-artifact@v4
        with:
          name: db-doc
          path: docs/database

  deploy_public:
    runs-on: ubuntu-latest
    needs: [build, generate-check, db-check]
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Download db doc
        uses: actions/download-artifact@v4
        with:
          name: db-doc
          path: docs/database

      - name: Generate API doc
        run: make generate-api-doc

      - name: Deploy to gh-pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs
          enable_jekyll: true

  db-migration:
    runs-on: ubuntu-latest
    needs: [build, generate-check, db-check]
    if: github.ref == 'refs/heads/main'
    environment: production-web
    env:
      MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
      MYSQL_USER: ${{ secrets.MYSQL_USER}}
      MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      MYSQL_HOST: localhost
      MYSQL_PORT: 3306
    steps:
      - uses: actions/checkout@v4

      - name: install migrate command
        env:
          VERSION: 4.18.2
        run: |
          curl -o migrate.deb -L https://github.com/golang-migrate/migrate/releases/download/v${VERSION}/migrate.linux-amd64.deb
          sudo dpkg -i migrate.deb
          rm migrate.deb

      - name: setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts

      - name: create SSH tunnel
        run: |
          ssh -f -N -L ${MYSQL_PORT}:localhost:${{ secrets.MYSQL_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.HOST }}

      - name: run migrate up
        run: make migrate-up-all

  deploy_web:
    runs-on: ubuntu-latest
    needs: [db-migration]
    environment: production-web
    steps:
      - name: Deploy to web server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd ${{ vars.DEPLOY_DIR }}
            git checkout main
            git pull origin main
            docker-compose pull
            docker-compose up -d
            docker system prune -f
